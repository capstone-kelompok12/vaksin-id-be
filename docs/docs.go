// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/login": {
            "post": {
                "description": "Login User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login Users",
                "parameters": [
                    {
                        "description": "Input Login User",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success login user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.Login"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/profile": {
            "get": {
                "description": "This can only be done by the logged in user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get user by nik",
                "responses": {
                    "200": {
                        "description": "Success get user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.UserProfile"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "This can only be done by the logged in user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "update users",
                "parameters": [
                    {
                        "description": "Input new data user",
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.UpdateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success update user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/payload.UpdateUser"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete data users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "delete user",
                "responses": {
                    "200": {
                        "description": "success delete user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/profile/address": {
            "get": {
                "description": "This can only be done by the logged in user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get user address",
                "responses": {
                    "200": {
                        "description": "Success get user address",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.UserAddresses"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "This can only be done by the logged in user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "update users addres",
                "parameters": [
                    {
                        "description": "Input new data user address",
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.UpdateAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success update address user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/payload.UpdateUser"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/signup": {
            "post": {
                "description": "Register User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register Users",
                "parameters": [
                    {
                        "description": "Input Register User",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payload.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success register user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/payload.RegisterUser"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "payload.Login": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "payload.RegisterUser": {
            "type": "object",
            "required": [
                "birthdate",
                "email",
                "fullname",
                "gender",
                "nik",
                "password",
                "phonenum"
            ],
            "properties": {
                "birthdate": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string",
                    "example": "test"
                },
                "gender": {
                    "type": "string"
                },
                "nik": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 16,
                    "example": "test"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phonenum": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 10
                }
            }
        },
        "payload.UpdateAddress": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "current_address": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "province": {
                    "type": "string"
                }
            }
        },
        "payload.UpdateUser": {
            "type": "object",
            "properties": {
                "birthdate": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "phonenum": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.Login": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "response.UserAddresses": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "currentAddress": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "idHealthFacilities": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nikUser": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "response.UserProfile": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "phoneNum": {
                    "type": "string"
                },
                "vaccineCount": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "VAKSIN-ID API",
	Description:      "This is a Booking Vaccine API for manage Booking\nCapstone Project Kelompok 12",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
